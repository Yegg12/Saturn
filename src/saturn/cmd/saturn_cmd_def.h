#ifndef SaturnCommandDefinition
#define SaturnCommandDefinition

#include "saturn_cmd.h"
#include "saturn_cmd_func.h"

extern const Command commands[] = { CMD_LITERALS(),
    CMD_LITERAL("mario"),
        CMD_LITERALS(),
            CMD_LITERAL("angle"),
                CMD_ARG_ARR("operation", "add\0set\0"),
                CMD_ARG_INT("angle"),
                CMD_EXEC(cmd_mario_angle),
            CMD_END(),
            CMD_LITERAL("position"),
                CMD_ARG_ARR("operation", "add\0set\0"),
                CMD_ARG_FLT("x"),
                CMD_ARG_FLT("y"),
                CMD_ARG_FLT("z"),
                CMD_EXEC(cmd_mario_pos),
            CMD_END(),
            CMD_LITERAL("size"),
                CMD_ARG_ARR("operation", "add\0set\0"),
                CMD_ARG_FLT("x"),
                CMD_EXEC(cmd_mario_size_linked),
                CMD_ARG_FLT("y"),
                CMD_ARG_FLT("z"),
                CMD_EXEC(cmd_mario_size),
            CMD_END(),
            CMD_LITERAL("walkpoint"),
                CMD_ARG_INT("walkpoint"),
                CMD_EXEC(cmd_mario_walkpoint),
            CMD_END(),
            CMD_LITERAL("state"),
                CMD_LITERALS(),
                    CMD_LITERAL("powerup"),
                        CMD_ARG_ARR("powerup", "metal\0vanish\0"),
                        CMD_ARG_BIN("enable"),
                        CMD_EXEC(cmd_mario_state_powerup),
                    CMD_END(),
                    CMD_LITERAL("eyes"),
                        CMD_ARG_ARR("eye", "blinking\0open\0half\0closed\0customA\0customB\0customC\0customD\0dead\0"),
                        CMD_EXEC(cmd_mario_state_eye),
                    CMD_END(),
                    CMD_LITERAL("hands"),
                        CMD_ARG_ARR("type", "fists\0open\0peace\0cap\0wing\0right_open\0"),
                        CMD_EXEC(cmd_mario_state_hands),
                    CMD_END(),
                    CMD_LITERAL("cap"),
                        CMD_ARG_ARR("type", "on\0off\0wing\0"),
                        CMD_EXEC(cmd_mario_state_cap),
                    CMD_END(),
                CMD_END(),
            CMD_END(),
        CMD_END(),
    CMD_END(),
    CMD_LITERAL("camera"),
        CMD_LITERALS(),
            CMD_LITERAL("pos"),
                CMD_ARG_ARR("operation", "add\0set\0"),
                CMD_ARG_FLT("x"),
                CMD_ARG_FLT("y"),
                CMD_ARG_FLT("z"),
                CMD_EXEC(cmd_camera_pos),
            CMD_END(),
            CMD_LITERAL("angle"),
                CMD_ARG_ARR("operation", "add\0set\0"),
                CMD_ARG_INT("pitch"),
                CMD_ARG_INT("yaw"),
                CMD_ARG_INT("roll"),
                CMD_EXEC(cmd_camera_angle),
            CMD_END(),
            CMD_LITERAL("fov"),
                CMD_ARG_ARR("operation", "add\0set\0"),
                CMD_ARG_FLT("fov"),
                CMD_EXEC(cmd_camera_fov),
            CMD_END(),
            CMD_LITERAL("follow"),
                CMD_ARG_ARR("operation", "add\0set\0"),
                CMD_ARG_FLT("follow"),
                CMD_EXEC(cmd_camera_follow),
            CMD_END(),
        CMD_END(),
    CMD_END(),
    CMD_LITERAL("timeline"),
        CMD_ARG_STR("timeline"),
        CMD_ARG_INT("frame"),
        CMD_LITERALS(),
            CMD_LITERAL("delete"),
                CMD_EXEC(cmd_timeline_delete),
            CMD_END(),
            CMD_LITERAL("curve"),
                CMD_ARG_ARR("type", "linear\0sine\0quadratic\0cubic\0wait\0"),
                CMD_EXEC(cmd_timeline_curve),
            CMD_END(),
            CMD_LITERAL("value"),
                CMD_LITERALS(),
                    CMD_LITERAL("float"),
                        CMD_ARG_FLT("value"),
                        CMD_EXEC(cmd_timeline_value_float),
                    CMD_END(),
                    CMD_LITERAL("bool"),
                        CMD_ARG_BIN("value"),
                        CMD_EXEC(cmd_timeline_value_bool),
                    CMD_END(),
                CMD_END(),
            CMD_END(),
        CMD_END(),
    CMD_END(),
    CMD_LITERAL("colorcode"),
        CMD_ARG_STR("path"),
        CMD_EXEC(cmd_colorcode),
    CMD_END(),
    CMD_LITERAL("warp"),
        CMD_LITERALS(),
            CMD_LITERAL("register"),
                CMD_ARG_INT("lvlid"),
                CMD_EXEC(cmd_warp_register),
            CMD_END(),
            CMD_LITERAL("to"),
                CMD_ARG_ARR("level", "chromakey\0grounds\0inside\0courtyard\0bob\0wf\0pss\0totwc\0jrb\0ccm\0bitdw\0bbh\0hmc\0cotmc\0lll\0ssl\0vcutm\0ddd\0bitfs\0sl\0wdw\0ttm\0thi\0ttc\0wmotr\0rr\0bits\0"),
                CMD_EXEC(cmd_warp_to),
            CMD_END(),
        CMD_END(),
    CMD_END(),
    CMD_LITERAL("object"),
        CMD_ARG_STR("model"),
        CMD_ARG_STR("bhv"),
        CMD_LITERALS(),
            CMD_LITERAL("mario"),
                CMD_EXEC(cmd_object_mario),
                CMD_ARG_INT("behparam1"),
                CMD_ARG_INT("behparam2"),
                CMD_ARG_INT("behparam3"),
                CMD_ARG_INT("behparam4"),
                CMD_EXEC(cmd_object_mario_behparam),
            CMD_END(),
            CMD_LITERAL("register"),
                CMD_ARG_INT("x"),
                CMD_ARG_INT("y"),
                CMD_ARG_INT("z"),
                CMD_EXEC(cmd_object_register_pos),
                CMD_ARG_INT("pitch"),
                CMD_ARG_INT("yaw"),
                CMD_ARG_INT("roll"),
                CMD_EXEC(cmd_object_register_angle),
                CMD_ARG_INT("behparam1"),
                CMD_ARG_INT("behparam2"),
                CMD_ARG_INT("behparam3"),
                CMD_ARG_INT("behparam4"),
                CMD_EXEC(cmd_object_register_behparam),
            CMD_END(),
            CMD_LITERAL("constant"),
                CMD_ARG_FLT("x"),
                CMD_ARG_FLT("y"),
                CMD_ARG_FLT("z"),
                CMD_EXEC(cmd_object_constant_pos),
                CMD_ARG_INT("pitch"),
                CMD_ARG_INT("yaw"),
                CMD_ARG_INT("roll"),
                CMD_EXEC(cmd_object_constant_angle),
                CMD_ARG_INT("behparam1"),
                CMD_ARG_INT("behparam2"),
                CMD_ARG_INT("behparam3"),
                CMD_ARG_INT("behparam4"),
                CMD_EXEC(cmd_object_constant_behparam),
            CMD_END(),
        CMD_END(),
    CMD_END(),
    CMD_LITERAL("animation"),
        CMD_LITERALS(),
            CMD_LITERAL("define"),
                CMD_ARG_STR("anim"),
                CMD_EXEC(cmd_animation_define),
                CMD_ARG_FLT("speed"),
                CMD_EXEC(cmd_animation_define_speed),
                CMD_ARG_BIN("looping"),
                CMD_EXEC(cmd_animation_define_looping),
                CMD_ARG_BIN("hanging"),
                CMD_EXEC(cmd_animation_define_hanging),
                CMD_LITERALS(),
                    CMD_LITERAL("store"),
                        CMD_ARG_INT("register"),
                        CMD_EXEC(cmd_animation_define_store),
                    CMD_END(),
                CMD_END(),
            CMD_END(),
            CMD_LITERAL("play"),
                CMD_EXEC(cmd_animation_play),
                CMD_ARG_INT("register"),
                CMD_EXEC(cmd_animation_play_register),
            CMD_END(),
            CMD_LITERAL("stop"),
                CMD_EXEC(cmd_animation_stop),
            CMD_END(),
        CMD_END(),
    CMD_END(),
    CMD_LITERAL("location"),
        CMD_ARG_STR("name"),
        CMD_LITERALS(),
            CMD_LITERAL("warp"),
                CMD_EXEC(cmd_location_warp),
            CMD_END(),
            CMD_LITERAL("delete"),
                CMD_EXEC(cmd_location_delete),
            CMD_END(),
            CMD_LITERAL("save"),
                CMD_LITERALS(),
                    CMD_LITERAL("mario"),
                        CMD_EXEC(cmd_location_save_mario),
                    CMD_END(),
                    CMD_LITERAL("constant"),
                        CMD_ARG_FLT("x"),
                        CMD_ARG_FLT("y"),
                        CMD_ARG_FLT("z"),
                        CMD_ARG_INT("angle"),
                        CMD_ARG_INT("level"),
                        CMD_EXEC(cmd_location_save_constant),
                    CMD_END(),
                    CMD_LITERAL("register"),
                        CMD_ARG_INT("x"),
                        CMD_ARG_INT("y"),
                        CMD_ARG_INT("z"),
                        CMD_ARG_INT("angle"),
                        CMD_ARG_INT("level"),
                        CMD_EXEC(cmd_location_save_register),
                    CMD_END(),
                CMD_END(),
            CMD_END(),
        CMD_END(),
    CMD_END(),
    CMD_LITERAL("environment"),
        CMD_ARG_ARR("envtype", "default\0none\0snow\0blizzard\0"),
        CMD_EXEC(cmd_environment),
    CMD_END(),
    CMD_LITERAL("call"),
        CMD_ARG_STR("path"),
        CMD_EXEC(cmd_call),
    CMD_END(),
    CMD_LITERAL("if"),
        CMD_ARG_INT("line"),
        CMD_ARG_INT("register"),
        CMD_ARG_ARR("operator", "eq\0neq\0gt\0lt\0geq\0leq\0"),
        CMD_ARG_ARR("valuetype", "constant\0register\0"),
        CMD_ARG_INT("value"),
        CMD_EXEC(cmd_if),
    CMD_END(),
    CMD_LITERAL("register"),
        CMD_ARG_INT("register"),
        CMD_LITERALS(),
            CMD_LITERAL("set"),
                CMD_LITERALS(),
                    CMD_LITERAL("from"),
                        CMD_ARG_ARR("value", "\0"),
                        CMD_EXEC(cmd_register_set_from),
                    CMD_END(),
                    CMD_LITERAL("constant"),
                        CMD_ARG_INT("value"),
                        CMD_EXEC(cmd_register_set_constant),
                    CMD_END(),
                CMD_END(),
            CMD_END(),
            CMD_LITERAL("assign"),
                CMD_ARG_ARR("value", "\0"),
                CMD_EXEC(cmd_register_assign),
            CMD_END(),
            CMD_LITERAL("copy"),
                CMD_ARG_INT("source"),
                CMD_EXEC(cmd_register_copy),
            CMD_END(),
            CMD_LITERAL("show"),
                CMD_EXEC(cmd_register_show),
            CMD_END(),
        CMD_END(),
    CMD_END(),
    CMD_LITERAL("operation"),
        CMD_ARG_INT("register"),
        CMD_ARG_ARR("operation", "add\0subtract\0multiply\0divide\0modulo\0power\0and\0or\0xor\0shift_left\0shift_right\0"),
        CMD_ARG_ARR("valuetype", "constant\0register\0"),
        CMD_ARG_INT("value"),
        CMD_EXEC(cmd_operation),
    CMD_END(),
    CMD_LITERAL("goto"),
        CMD_ARG_ARR("operation", "add\0set\0"),
        CMD_ARG_ARR("valuetype", "constant\0register\0"),
        CMD_ARG_INT("value"),
        CMD_EXEC(cmd_goto),
    CMD_END(),
    CMD_LITERAL("wait"),
        CMD_EXEC(cmd_wait),
    CMD_END(),
    CMD_LITERAL("alias"),
        CMD_ARG_STR("name"),
        CMD_LITERALS(),
            CMD_LITERAL("set"),
                CMD_LITERALS(),
                    CMD_LITERAL("value"),
                        CMD_ARG_INT("value"),
                        CMD_EXEC(cmd_alias_set_value),
                    CMD_END(),
                    CMD_LITERAL("from"),
                        CMD_ARG_INT("register"),
                        CMD_EXEC(cmd_alias_set_from),
                    CMD_END(),
                CMD_END(),
            CMD_END(),
            CMD_LITERAL("delete"),
                CMD_EXEC(cmd_alias_delete),
            CMD_END(),
        CMD_END(),
    CMD_END(),
    CMD_LITERAL("kill"),
        CMD_EXEC(cmd_kill),
    CMD_END(),
CMD_END() };

#endif